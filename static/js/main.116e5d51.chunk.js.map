{"version":3,"sources":["Components/Charcters/Characters.module.css","Components/Paginator/paginator.module.css","Components/navbar/navbar.module.css","Components/Charcters/Character/Character.module.css","Components/header/header.module.css","Components/footer/footer.module.css","api/api.js","redux/charactersReducer.js","redux/CharactersSelector.js","assets/images/paginator/leftArrow.svg","assets/images/paginator/rightArrow.svg","Components/Paginator/paginator.js","Components/Charcters/Characters.js","Components/Charcters/CharactersContainer.js","Components/navbar/navbar.js","Components/header/header.js","redux/CharacterSelector.js","assets/images/leftarrow.svg","assets/images/rightarrow.svg","Components/Charcters/Character/Character.js","Components/Charcters/Character/CharacterContainer.js","Components/footer/footer.js","App.js","redux/redux-store.js","index.js"],"names":["module","exports","md5","require","ApiKey","axios","baseURL","params","apikey","ts","Math","floor","Number","Date","now","hash","marvelApi","offset","limit","then","response","data","CharacterId","console","log","results","characterId","SET_CHARACTERS","OFFSET_CHARACTERS","SET_PARAMS_CHARACTERS","SET_CHARACTER","SET_CHARACTER_IMG","SET_COMICS","initialState","characters","totalCount","pageSize","currentPage","character","characterImg","comics","events","stories","setCharacters","type","setParamsCharacters","total","CharactersRaducer","state","action","getCharactersWithState","getTotalCount","getPageSize","getOffset","getCurrentPage","Paginator","portionSize","props","pageCount","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","containerPaginator","onClick","src","leftArrow","filter","p","map","paginatorItem","activePage","OffSetCharacters","onChangePage","rightArrow","Characters","charactersContainer","ch","imgUrl","thumbnail","path","extension","to","id","characterCard","characterCardFront","alt","characterCardBack","name","CharactersContainer","this","getCharacters","prevProps","React","Component","connect","dispatch","getState","a","setOffSetCharacters","Navbar","wrapper","item","Header","headerContainer","getCharacterWithState","getCharacterImg","getComicsWithState","Character","CharacterImgUrl","comicsNumber","setComicsNumber","length","characterContainer","characterName","characterInfoWrapper","characterImgContainer","characterDescription","description","characterComicsWrapper","characterComicsTitle","characterComicsContentWrapper","characterComicsLeft","comicsArrow","characterComicsRight","characterComics","index","comicsTitleImgUrl","activeComicsSlide","comicsSlide","comicsImg","comicsTitle","title","comicsDescription","CharacterContainer","getCharacter","match","getComics","compose","characterData","withRouter","Footer","href","App","exact","render","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.116e5d51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"charactersContainer\":\"Characters_charactersContainer__2A63O\",\"characters\":\"Characters_characters__3-i49\",\"characterImg\":\"Characters_characterImg__1-3Kr\",\"characterCard\":\"Characters_characterCard__3ZSf8\",\"characterCardFront\":\"Characters_characterCardFront__3a7Lj\",\"characterCardBack\":\"Characters_characterCardBack__p1m0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorItem\":\"paginator_paginatorItem__OOkkB\",\"activePage\":\"paginator_activePage__19lRK\",\"containerPaginator\":\"paginator_containerPaginator__2FllI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"navbar_wrapper__UdIKH\",\"item\":\"navbar_item__3Iuc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterName\":\"Character_characterName__3SLJM\",\"characterInfoWrapper\":\"Character_characterInfoWrapper__30F90\",\"characterImgContainer\":\"Character_characterImgContainer__2Tcx9\",\"characterDescription\":\"Character_characterDescription__1JHg7\",\"characterComicsWrapper\":\"Character_characterComicsWrapper__1wN28\",\"characterComicsTitle\":\"Character_characterComicsTitle__3vKrY\",\"characterComicsContentWrapper\":\"Character_characterComicsContentWrapper__AVGvX\",\"characterComics\":\"Character_characterComics__2tJVC\",\"characterComicsLeft\":\"Character_characterComicsLeft__2WOjt\",\"characterComicsRight\":\"Character_characterComicsRight__2I_r-\",\"activeComicsSlide\":\"Character_activeComicsSlide__NkA96\",\"comicsSlide\":\"Character_comicsSlide__1DDMr\",\"comicsArrow\":\"Character_comicsArrow__SHyrA\",\"comicsImg\":\"Character_comicsImg__3cYeE\",\"comicsTitle\":\"Character_comicsTitle__2Ri3Y\",\"comicsDescription\":\"Character_comicsDescription__b2IMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__3j76l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"footer_wrapper__1qyM6\"};","import * as axios from \"axios\";\r\n\r\nlet md5 = require(\"md5\");\r\nconst instance = axios.create({\r\n  baseURL: \"https://gateway.marvel.com\",\r\n  params: {\r\n    apikey: \"5ddfd52b0b9b730e546909f7c39a2af8\",\r\n  },\r\n});\r\nconst limit = 21;\r\nconst ApiKey = \"5ddfd52b0b9b730e546909f7c39a2af8\";\r\nconst PrivateKey = \"3930c2db72ca7e144ba0c515645b38795f7302d4\";\r\nlet ts = Math.floor(Number(Date.now()) / 1000);\r\nlet hash = md5(ts + PrivateKey + ApiKey);\r\nexport const marvelApi = {\r\n  getCharacters(offset) {\r\n    return axios\r\n      .get(\"https://gateway.marvel.com/v1/public/characters\", {\r\n        params: {\r\n          ts: ts,\r\n          apikey: ApiKey,\r\n          hash: hash,\r\n          offset: offset,\r\n          limit: 9,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  getCharacter(CharacterId) {\r\n    return axios\r\n      .get(`https://gateway.marvel.com/v1/public/characters/${CharacterId}`, {\r\n        params: {\r\n          ts: ts,\r\n          apikey: ApiKey,\r\n          hash: hash,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.data.results);\r\n        return response.data;\r\n      });\r\n  },\r\n  getComics(characterId) {\r\n    return axios\r\n      .get(\r\n        `https://gateway.marvel.com/v1/public/characters/${characterId}/comics`,\r\n        {\r\n          params: {\r\n            ts: ts,\r\n            apikey: ApiKey,\r\n            hash: hash,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data.data.results);\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n","import { marvelApi } from \"../api/api\";\r\n\r\nconst SET_CHARACTERS = \"SET-CHARACTERS\";\r\nconst OFFSET_CHARACTERS = \"OFFSET-CHARACTERS\";\r\nconst SET_PARAMS_CHARACTERS = \"SET-PARAMS-CHARACTERS\";\r\nconst SET_CHARACTER = \"SET-CHARACTER\";\r\nconst SET_CHARACTER_IMG = \"SET_CHARACTER_IMG\";\r\nconst SET_COMICS = \"SET_COMICS\";\r\nlet initialState = {\r\n  characters: [],\r\n  totalCount: null,\r\n  pageSize: 9,\r\n  currentPage: 1,\r\n  offset: null,\r\n  character: {},\r\n  characterImg: {},\r\n  comics: [],\r\n  events: [],\r\n  stories: [],\r\n};\r\n\r\nexport const setCharacters = (data) => ({\r\n  type: SET_CHARACTERS,\r\n  data,\r\n});\r\n\r\nexport const setParamsCharacters = (data) => ({\r\n  type: SET_PARAMS_CHARACTERS,\r\n  total: data.data.total,\r\n});\r\n\r\nexport const setOffSetCharacters = (offset, p) => ({\r\n  type: OFFSET_CHARACTERS,\r\n  offset,\r\n  currentPage: p,\r\n});\r\n\r\nexport const setCharacter = (characterData) => ({\r\n  type: SET_CHARACTER,\r\n  character: characterData,\r\n});\r\nexport const setCharacterImg = (characterImg) => ({\r\n  type: SET_CHARACTER_IMG,\r\n  characterImg,\r\n});\r\n\r\nexport const setComics = (comics) => ({\r\n  type: SET_COMICS,\r\n  comics,\r\n});\r\n\r\nconst CharactersRaducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CHARACTERS: {\r\n      return {\r\n        ...state,\r\n        characters: action.data,\r\n      };\r\n    }\r\n    case OFFSET_CHARACTERS: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n        offset: action.offset,\r\n      };\r\n    }\r\n    case SET_PARAMS_CHARACTERS: {\r\n      return {\r\n        ...state,\r\n        totalCount: action.total,\r\n      };\r\n    }\r\n    case SET_CHARACTER: {\r\n      return {\r\n        ...state,\r\n        character: action.character,\r\n      };\r\n    }\r\n    case SET_CHARACTER_IMG: {\r\n      return {\r\n        ...state,\r\n        characterImg: action.characterImg,\r\n      };\r\n    }\r\n    case SET_COMICS: {\r\n      return {\r\n        ...state,\r\n        comics: action.comics,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const OffSetCharacters = (offset, currentPage) => (dispatch) => {\r\n  dispatch(setOffSetCharacters(offset, currentPage));\r\n};\r\nexport const getCharacters = () => async (dispatch, getState) => {\r\n  const offset = getState().characters.offset;\r\n  const data = await marvelApi.getCharacters(offset);\r\n  dispatch(setParamsCharacters(data));\r\n  dispatch(setCharacters(data.data.results));\r\n};\r\n\r\nexport const getCharacter = (characterId) => async (dispatch, getState) => {\r\n  /* if (getState().characters.character === null) { */\r\n  const data = await marvelApi.getCharacter(characterId);\r\n  console.log(data.data);\r\n  dispatch(setCharacter(data.data.results[0]));\r\n  dispatch(setCharacterImg(data.data.results[0].thumbnail));\r\n};\r\n\r\nexport const getComics = (characterId) => async (dispatch) => {\r\n  const data = await marvelApi.getComics(characterId);\r\n\r\n  dispatch(setComics(data.data.results));\r\n};\r\n\r\nexport default CharactersRaducer;\r\n","export const getCharactersWithState = (state) => {\r\n  return state.characters.characters;\r\n};\r\n\r\nexport const getTotalCount = (state) => {\r\n  return state.characters.totalCount;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.characters.pageSize;\r\n};\r\n\r\nexport const getOffset = (state) => {\r\n  return state.characters.offset;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.characters.currentPage;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/leftArrow.003545fb.svg\";","export default __webpack_public_path__ + \"static/media/rightArrow.48e2876f.svg\";","import React, { useState } from \"react\";\r\nimport leftArrow from \"../../assets/images/paginator/leftArrow.svg\";\r\nimport rightArrow from \"../../assets/images/paginator/rightArrow.svg\";\r\nimport s from \"./paginator.module.css\";\r\n\r\nconst Paginator = ({\r\n  pageSize,\r\n  totalCount,\r\n  currentPage,\r\n  portionSize = 10,\r\n  ...props\r\n}) => {\r\n  let pageCount = Math.ceil(totalCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i < pageCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let onChangePage = (p) => {\r\n    let offset = pageSize * (p - 1);\r\n    props.OffSetCharacters(offset, p);\r\n  };\r\n\r\n  let portionCount = Math.ceil(totalCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.containerPaginator}>\r\n      {portionNumber > 1 && (\r\n        <div\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          <img src={leftArrow} />\r\n        </div>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => leftPortionPageNumber <= p && rightPortionPageNumber >= p\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <div className={s.paginatorItem}>\r\n              <span\r\n                className={currentPage === p && s.activePage}\r\n                onClick={() => onChangePage(p)}\r\n              >\r\n                {p}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      {portionNumber < portionCount && (\r\n        <div\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          <img src={rightArrow} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../Paginator/paginator\";\r\nimport s from \"./Characters.module.css\";\r\nconst Characters = (props) => {\r\n  return (\r\n    <div className={s.charactersContainer}>\r\n      <Paginator\r\n        totalCount={props.totalCount}\r\n        pageSize={props.pageSize}\r\n        OffSetCharacters={props.OffSetCharacters}\r\n        currentPage={props.currentPage}\r\n      />\r\n      <div className={s.characters}>\r\n        {props.characters.map((ch) => {\r\n          let imgUrl = `${ch.thumbnail.path}.${ch.thumbnail.extension}`;\r\n          console.log(imgUrl);\r\n          return (\r\n            <NavLink to={\"/character/\" + ch.id}>\r\n              <div className={s.characterCard}>\r\n                <div className={s.characterCardFront}>\r\n                  <img\r\n                    src={imgUrl}\r\n                    alt={\"jdsagskg\"}\r\n                    className={s.characterImg}\r\n                  />\r\n                </div>\r\n                <div className={s.characterCardBack}>{ch.name}</div>\r\n              </div>\r\n            </NavLink>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCharacters, OffSetCharacters } from \"../../redux/charactersReducer\";\r\nimport {\r\n  getCharactersWithState,\r\n  getCurrentPage,\r\n  getOffset,\r\n  getPageSize,\r\n  getTotalCount,\r\n} from \"../../redux/CharactersSelector\";\r\nimport Characters from \"./Characters\";\r\n\r\nclass CharactersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getCharacters();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.offset !== this.props.offset) {\r\n      this.props.getCharacters();\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.characters);\r\n    return <Characters characters={this.props.characters} {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  characters: getCharactersWithState(state),\r\n  totalCount: getTotalCount(state),\r\n  pageSize: getPageSize(state),\r\n  offset: getOffset(state),\r\n  currentPage: getCurrentPage(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCharacters,\r\n  OffSetCharacters,\r\n})(CharactersContainer);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <NavLink to={\"./characters\"} className={s.item}>\r\n        CHARACTERS\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport s from \"./header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={s.headerContainer}>\r\n      <Navbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const getCharacterWithState = (state) => {\r\n  return state.characters.character;\r\n};\r\nexport const getCharacterImg = (state) => {\r\n  return state.characters.characterImg;\r\n};\r\n\r\nexport const getComicsWithState = (state) => {\r\n  return state.characters.comics;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/leftarrow.7d2ac4c8.svg\";","export default __webpack_public_path__ + \"static/media/rightarrow.c70b9399.svg\";","import React, { useState } from \"react\";\r\nimport s from \"./Character.module.css\";\r\nimport leftArrow from \"../../../assets/images/leftarrow.svg\";\r\nimport rightArrow from \"../../../assets/images/rightarrow.svg\";\r\n\r\nconst Character = (props) => {\r\n  const character = props.character;\r\n\r\n  const CharacterImgUrl = `${props.characterImg.path}.${props.characterImg.extension}`;\r\n  const [comicsNumber, setComicsNumber] = useState(0);\r\n  const length = props.comics.length;\r\n\r\n  let nextSlideComics = () => {\r\n    setComicsNumber(comicsNumber === length - 1 ? 0 : comicsNumber + 1);\r\n  };\r\n\r\n  const prevSlideComics = () => {\r\n    setComicsNumber(comicsNumber === 0 ? length - 1 : comicsNumber - 1);\r\n  };\r\n  console.log(comicsNumber);\r\n\r\n  return (\r\n    <div className={s.characterContainer}>\r\n      <div className={s.characterName}>{character.name}</div>\r\n      <div className={s.characterInfoWrapper}>\r\n        <div className={s.characterImgContainer}>\r\n          {<img src={CharacterImgUrl} />}\r\n        </div>\r\n\r\n        <div className={s.characterDescription}>{character.description}</div>\r\n      </div>\r\n      {/* Comics-Slider--------------------------------------------------------- */}\r\n      <div className={s.characterComicsWrapper}>\r\n        <div className={s.characterComicsTitle}>COMICS</div>\r\n        <div className={s.characterComicsContentWrapper}>\r\n          <div className={s.characterComicsLeft} onClick={prevSlideComics}>\r\n            <img src={leftArrow} className={s.comicsArrow} />\r\n          </div>\r\n          <div className={s.characterComicsRight} onClick={nextSlideComics}>\r\n            <img src={rightArrow} className={s.comicsArrow} />\r\n          </div>\r\n          <div className={s.characterComics}>\r\n            {props.comics !== [] &&\r\n              props.comics.map((comics, index) => {\r\n                let comicsTitleImgUrl = `${comics.thumbnail.path}.${comics.thumbnail.extension}`;\r\n                return (\r\n                  <div\r\n                    className={\r\n                      comicsNumber === index\r\n                        ? s.activeComicsSlide\r\n                        : s.comicsSlide\r\n                    }\r\n                  >\r\n                    {comicsNumber === index && (\r\n                      <div>\r\n                        <div className={s.comicsImg}>\r\n                          <img src={comicsTitleImgUrl} />\r\n                        </div>\r\n                        <div className={s.comicsTitle}>{comics.title}</div>\r\n                        <div className={s.comicsDescription}>\r\n                          {comics.description}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/*  <div>\r\n              {comic.images.map((img) => {\r\n                let comicImgUrl = `${img.path}.${img.extension}`;\r\n                return (\r\n                  <div>\r\n                    <img src={comicImgUrl} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div> */}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCharacterImg,\r\n  getCharacterWithState,\r\n  getComicsWithState,\r\n} from \"../../../redux/CharacterSelector\";\r\nimport { getCharacter, getComics } from \"../../../redux/charactersReducer\";\r\nimport Character from \"./Character\";\r\n\r\nclass CharacterContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getCharacter(this.props.match.params.characterId);\r\n    this.props.getComics(this.props.match.params.characterId);\r\n  }\r\n\r\n  render() {\r\n    return <Character character={this.props.character} {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  character: getCharacterWithState(state),\r\n  characterImg: getCharacterImg(state),\r\n  comics: getComicsWithState(state),\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getCharacter,\r\n    getComics,\r\n  }),\r\n  withRouter\r\n)(CharacterContainer);\r\n","import React from \"react\";\r\nimport s from \"./footer.module.css\";\r\nconst Footer = (props) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      All information from an official source :\r\n      <a href={\"https://developer.marvel.com/docs\"}>\r\n        https://developer.marvel.com/docs\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CharactersContainer from \"./Components/Charcters/CharactersContainer\";\nimport Header from \"./Components/header/header\";\nimport { Route, withRouter } from \"react-router\";\nimport CharacterContainer from \"./Components/Charcters/Character/CharacterContainer\";\nimport { compose } from \"redux\";\nimport Footer from \"./Components/footer/footer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className={\"appWrapper\"}>\n        <Header />\n        <div className={\"appWrapperContent\"}>\n          <div className={\"appContent\"}>\n            <div>\n              <Route\n                exact\n                path={\"/characters\"}\n                render={() => <CharactersContainer />}\n              />\n              <Route\n                path={\"/character/:characterId\"}\n                render={() => <CharacterContainer />}\n              />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({});\nexport default compose(connect(mapStateToProps, {}), withRouter)(App);\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport CharactersRaducer from \"./charactersReducer\";\r\nlet reducers = combineReducers({\r\n  characters: CharactersRaducer,\r\n});\r\n\r\nlet store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n  rerenderEntireTree(store.getState());\n});\n"],"sourceRoot":""}